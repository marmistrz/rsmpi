(function() {var implementors = {};
implementors["mpi"] = ["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_int.html\" title=\"type std::os::raw::c_int\">c_int</a>&gt; for <a class=\"enum\" href=\"mpi/environment/enum.Threading.html\" title=\"enum mpi::environment::Threading\">Threading</a>","impl&lt;'a, S:&nbsp;<a class=\"trait\" href=\"mpi/request/trait.Scope.html\" title=\"trait mpi::request::Scope\">Scope</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mpi/request/struct.WaitGuard.html\" title=\"struct mpi::request::WaitGuard\">WaitGuard</a>&lt;'a, S&gt;&gt; for <a class=\"struct\" href=\"mpi/request/struct.Request.html\" title=\"struct mpi::request::Request\">Request</a>&lt;'a, S&gt;","impl&lt;'a, S:&nbsp;<a class=\"trait\" href=\"mpi/request/trait.Scope.html\" title=\"trait mpi::request::Scope\">Scope</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mpi/request/struct.Request.html\" title=\"struct mpi::request::Request\">Request</a>&lt;'a, S&gt;&gt; for <a class=\"struct\" href=\"mpi/request/struct.WaitGuard.html\" title=\"struct mpi::request::WaitGuard\">WaitGuard</a>&lt;'a, S&gt;","impl&lt;'a, S:&nbsp;<a class=\"trait\" href=\"mpi/request/trait.Scope.html\" title=\"trait mpi::request::Scope\">Scope</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mpi/request/struct.CancelGuard.html\" title=\"struct mpi::request::CancelGuard\">CancelGuard</a>&lt;'a, S&gt;&gt; for <a class=\"struct\" href=\"mpi/request/struct.WaitGuard.html\" title=\"struct mpi::request::WaitGuard\">WaitGuard</a>&lt;'a, S&gt;","impl&lt;'a, S:&nbsp;<a class=\"trait\" href=\"mpi/request/trait.Scope.html\" title=\"trait mpi::request::Scope\">Scope</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mpi/request/struct.WaitGuard.html\" title=\"struct mpi::request::WaitGuard\">WaitGuard</a>&lt;'a, S&gt;&gt; for <a class=\"struct\" href=\"mpi/request/struct.CancelGuard.html\" title=\"struct mpi::request::CancelGuard\">CancelGuard</a>&lt;'a, S&gt;","impl&lt;'a, S:&nbsp;<a class=\"trait\" href=\"mpi/request/trait.Scope.html\" title=\"trait mpi::request::Scope\">Scope</a>&lt;'a&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"mpi/request/struct.Request.html\" title=\"struct mpi::request::Request\">Request</a>&lt;'a, S&gt;&gt; for <a class=\"struct\" href=\"mpi/request/struct.CancelGuard.html\" title=\"struct mpi::request::CancelGuard\">CancelGuard</a>&lt;'a, S&gt;","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_int.html\" title=\"type std::os::raw::c_int\">c_int</a>&gt; for <a class=\"enum\" href=\"mpi/topology/enum.CommunicatorRelation.html\" title=\"enum mpi::topology::CommunicatorRelation\">CommunicatorRelation</a>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/os/raw/type.c_int.html\" title=\"type std::os::raw::c_int\">c_int</a>&gt; for <a class=\"enum\" href=\"mpi/topology/enum.GroupRelation.html\" title=\"enum mpi::topology::GroupRelation\">GroupRelation</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
